Filters with AND, ORm and NOT

Logical operators:
	AND, OR, and NOT allow you to filter your queries to return the specific information that will help you in your work as a security analyst. They are all considered logical operators.

AND
	AND is used to filter on two conditions. AND specifies that both conditions must be met simultaneously.
	As and example, a cybersecurity concern might affect only those customer accounts that meet both the condition of being handled by a support representative with an ID of 5 and the condition of being located in the USA. To find the names and emails of those specific customers, you should place the two conditions on either side of the AND operator in the WHERE clause:

	SELECT firstname, lastname, email, country, supportrepid
	FROM customers
	WHERE supportrepid = 5 and country = 'USA';

	Running this query returns four rows on information about the customers. You can use this information to contact them about the security concern.

OR
	The OR operatir also connects two conditions, but OR specifies that either condition can be met. It returns results where the first condition, the second condition, or both are met.

	For example, if you are responsible for finding all customers who are either in the USA or Canada so that you can communicate information about a security update. You can use an OR operator to find all the needed records. As the following query demonstrates, you should place the two conditions on either side of the OR operator in the WHERE clause:

	SELECT firstname, lastname, email, country
	FROM customers
	WHERE country = 'Canada' OR country = 'USA';

	the query returns all customers from either Canada or USA.

	note: even if both conditions are based on the same column, you need to write out both full conditions. For instance, the query in the previous example contains the filter WHER country = 'Canada' or country = 'USA';

NOT
	Unlike the previous two operators, the NOT operator only works on a single condition, and not on multiple ones. The NOT operator negates a condition specified in the query.

	For example, if the cybersecurity issue doesn't affect customers in the USA but might affect those in other countries, you can return all customers who are not in the USA. This would be more efficient than creating individual conditions for all of the other countries. To use the NOT operator for this task, write the following query and place NOT directly after WHERE:

	SELECT firstname, lastname, email, country
	FROM customers
	WHERE NOT country = 'USA';

	SQL returns every entry where the customers re not from the USA.

	PRO TIP: another way of finding values that are not equal to a certain value is by using the <> operator or the != operator. For example, WHERE country <> 'USA' and WHERE country != 'USA' are the same filters as WHERE NOT country = 'USA'

Combining logical operators
	  Logical operators can be combined in filters. For example, if you know that both the USA and Canada are not affected by a cybersecurity issue, you can combine operators to return customers in all countries besides these two. In the following query, NOT is placed before the first condition, its joined to a second condition with AND, and the NOT is also placed before the second condition. You can run it to explore what it returns.

	  SELECT firstname, lastname, email, country
	  FROM customers
	  WHERE NOT country = 'Canada' AND NOT country = 'USA';

Key takeaways:
    Logical operators allow you to create more specific filters that target the security-related information you need. The AND operator requires two conditions to be true simulataneaously, the OR operator requires either one or both conditions to be true, and the NOT operator negates a condition. Logical operators can be combined together to create even more specific queries.
